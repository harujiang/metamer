<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:a4j="http://richfaces.org/a4j"
      xmlns:metamer="http://java.sun.com/jsf/composite/metamer" xmlns:rich="http://richfaces.org/rich">

    <!--
JBoss, Home of Professional Open Source
Copyright 2010-2011, Red Hat, Inc. and individual contributors
by the @authors tag. See the copyright.txt in the distribution for a
full listing of individual contributors.

This is free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as
published by the Free Software Foundation; either version 2.1 of
the License, or (at your option) any later version.

This software is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this software; if not, write to the Free
Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
02110-1301 USA, or see the FSF site: http://www.fsf.org.
    -->

    <ui:composition template="/templates/template.xhtml">

        <ui:define name="view">
            <f:metadata>
                <f:viewParam name="templates" value="#{templateBean.templates}">
                    <f:converter converterId="templatesListConverter" />
                </f:viewParam>
            </f:metadata>
        </ui:define>

        <ui:define name="head">
            <script type="text/javascript">
                function add(element) {
                    element.innerHTML = 1 + parseInt(element.innerHTML);
                }
            </script>
        </ui:define>

        <ui:define name="component">
            <a4j:queue id="queue1"
                       ignoreDupResponses="#{a4jQueueBean.attributes['ignoreDupResponses'].value}"
                       name="#{a4jQueueBean.attributes['name'].value}"
                       onbeforedomupdate="#{a4jQueueBean.attributes['onbeforedomupdate'].value}"
                       oncomplete="#{a4jQueueBean.attributes['oncomplete'].value}"
                       onerror="#{a4jQueueBean.attributes['onerror'].value}"
                       onevent="#{a4jQueueBean.attributes['onevent'].value}"
                       onrequestdequeue="#{a4jQueueBean.attributes['onrequestdequeue'].value}"
                       onrequestqueue="#{a4jQueueBean.attributes['onrequestqueue'].value}"
                       onsubmit="#{a4jQueueBean.attributes['onsubmit'].value}"
                       rendered="#{a4jQueueBean.attributes['rendered'].value}"
                       requestDelay="#{a4jQueueBean.attributes['requestDelay'].value}"
                       />

            <h:inputText id="input1" value="#{a4jAttachQueueBean.text1}" onkeypress="add(#{rich:element('events1')}); #{rich:element('timeWatcher:grid')}.event(1); ">
                <a4j:ajax event="keypress" render="output1" execute="@form" onbegin="add(#{rich:element('requests')}); #{rich:element('timeWatcher:grid')}.begin(); "
                          onbeforedomupdate="add(#{rich:element('updates')});" oncomplete="#{rich:element('timeWatcher:grid')}.complete(); #{rich:element('timeWatcher:grid')}.difference(); ">
                    <a4j:attachQueue id="a4jAttachQueue1"
                                     ignoreDupResponses="#{a4jAttachQueueBean.attributes['ignoreDupResponses'].value}"
                                     name="#{a4jAttachQueueBean.attributes['name'].value}"
                                     onrequestdequeue="#{a4jAttachQueueBean.attributes['onrequestdequeue'].value}"
                                     onrequestqueue="#{a4jAttachQueueBean.attributes['onrequestqueue'].value}"
                                     rendered="#{a4jAttachQueueBean.attributes['rendered'].value}"
                                     requestDelay="#{a4jAttachQueueBean.attributes['requestDelay'].value}"
                                     requestGroupingId="#{a4jAttachQueueBean.attributes['requestGroupingId'].value}"
                                     />
                </a4j:ajax>
            </h:inputText>

            <h:inputText id="input2" value="#{a4jAttachQueueBean.text2}" onkeypress="add(#{rich:element('events2')}); #{rich:element('timeWatcher:grid')}.event(2); ">
                <a4j:ajax event="keypress" render="output2" execute="@form" onbegin="add(#{rich:element('requests')}); #{rich:element('timeWatcher:grid')}.begin(); "
                          onbeforedomupdate="add(#{rich:element('updates')});" oncomplete="#{rich:element('timeWatcher:grid')}.complete(); #{rich:element('timeWatcher:grid')}.difference(); ">
                    <a4j:attachQueue id="a4jAttachQueue2"
                                     ignoreDupResponses="#{a4jAttachQueueBean.attributes2['ignoreDupResponses'].value}"
                                     name="#{a4jAttachQueueBean.attributes2['name'].value}"
                                     onrequestdequeue="#{a4jAttachQueueBean.attributes2['onrequestdequeue'].value}"
                                     onrequestqueue="#{a4jAttachQueueBean.attributes2['onrequestqueue'].value}"
                                     rendered="#{a4jAttachQueueBean.attributes2['rendered'].value}"
                                     requestDelay="#{a4jAttachQueueBean.attributes2['requestDelay'].value}"
                                     requestGroupingId="#{a4jAttachQueueBean.attributes2['requestGroupingId'].value}"
                                     />
                </a4j:ajax>
            </h:inputText>

            <h:panelGrid columns="2">
                Output 1:
                <h:outputText id="output1" value="#{a4jAttachQueueBean.text1}" style="font-weight:bold;"/>
                Output 2:
                <h:outputText id="output2" value="#{a4jAttachQueueBean.text2}" style="font-weight:bold;"/>
                Event 1 count:
                <h:outputText value="0" id="events1" />
                Event 2 count:
                <h:outputText value="0" id="events2" />
                Requests count:
                <h:outputText value="0" id="requests" />
                DOM updates count:
                <h:outputText value="0" id="updates" />
            </h:panelGrid>

            <metamer:clientTimeWatcher id="timeWatcher" events="2" />

        </ui:define>

        <ui:define name="outOfTemplateAfter">
            Attributes for first attach queue (first input)
            <br/>
            <metamer:attributes value="#{a4jAttachQueueBean.attributes}" id="attributes1" />
            <br/>
            Attributes for second attach queue (second input)
            <br/>
            <metamer:attributes value="#{a4jAttachQueueBean.attributes2}" id="attributes2" />
            <br />
            Attributes for queue1
            <br />
            <metamer:attributes value="#{a4jQueueBean.attributes}" id="queueAttributes" />
        </ui:define>

    </ui:composition>
</html>