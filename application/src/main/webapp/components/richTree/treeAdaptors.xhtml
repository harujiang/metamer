<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:metamer="http://java.sun.com/jsf/composite/metamer"
      xmlns:rich="http://richfaces.org/rich" xmlns:a4j="http://richfaces.org/a4j">

    <!--
JBoss, Home of Professional Open Source
Copyright 2010-2011, Red Hat, Inc. and individual contributors
by the @authors tag. See the copyright.txt in the distribution for a
full listing of individual contributors.

This is free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as
published by the Free Software Foundation; either version 2.1 of
the License, or (at your option) any later version.

This software is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this software; if not, write to the Free
Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
02110-1301 USA, or see the FSF site: http://www.fsf.org.
    -->

    <ui:composition template="/templates/template.xhtml">
        <ui:param name="componentId" value="richTree" />

        <ui:define name="view">
            <f:metadata>
                <f:viewParam name="templates" value="#{templateBean.templates}">
                    <f:converter converterId="templatesListConverter" />
                </f:viewParam>
                <f:event type="preRenderView" listener="#{richTreeBean.preRenderView}" />
            </f:metadata>
        </ui:define>

        <ui:define name="component">

            <rich:tree id="richTree"
                       var="node"
                       selection="#{richTreeBean.selection}"
                       selectionChangeListener="#{richTreeListenerBean.processSelectionChange}"
                       toggleListener="#{richTreeListenerBean.processToggle}"

                       data="#{richTreeBean.attributes['data'].value}"
                       dir="#{richTreeBean.attributes['dir'].value}"
                       execute="#{richTreeBean.attributes['execute'].value}"
                       handleClass="#{richTreeBean.attributes['handleClass'].value}"
                       iconClass="#{richTreeBean.attributes['iconClass'].value}"
                       iconCollapsed="#{richTreeBean.attributes['iconCollapsed'].value}"
                       iconExpanded="#{richTreeBean.attributes['iconExpanded'].value}"
                       iconLeaf="#{richTreeBean.attributes['iconLeaf'].value}"
                       immediate="#{richTreeBean.attributes['immediate'].value}"
                       keepSaved="#{richTreeBean.attributes['keepSaved'].value}"
                       labelClass="#{richTreeBean.attributes['labelClass'].value}"
                       lang="#{richTreeBean.attributes['lang'].value}"
                       limitRender="#{richTreeBean.attributes['limitRender'].value}"
                       nodeClass="#{richTreeBean.attributes['nodeClass'].value}"
                       onbeforedomupdate="#{richTreeBean.attributes['onbeforedomupdate'].value}"
                       onbeforenodetoggle="#{richTreeBean.attributes['onbeforenodetoggle'].value}"
                       onbeforeselectionchange="#{richTreeBean.attributes['onbeforeselectionchange'].value}"
                       onbegin="#{richTreeBean.attributes['onbegin'].value}"
                       onclick="#{richTreeBean.attributes['onclick'].value}"
                       oncomplete="#{richTreeBean.attributes['oncomplete'].value}"
                       ondblclick="#{richTreeBean.attributes['ondblclick'].value}"
                       onkeydown="#{richTreeBean.attributes['onkeydown'].value}"
                       onkeypress="#{richTreeBean.attributes['onkeypress'].value}"
                       onkeyup="#{richTreeBean.attributes['onkeyup'].value}"
                       onmousedown="#{richTreeBean.attributes['onmousedown'].value}"
                       onmousemove="#{richTreeBean.attributes['onmousemove'].value}"
                       onmouseout="#{richTreeBean.attributes['onmouseout'].value}"
                       onmouseover="#{richTreeBean.attributes['onmouseover'].value}"
                       onmouseup="#{richTreeBean.attributes['onmouseup'].value}"
                       onnodetoggle="#{richTreeBean.attributes['onnodetoggle'].value}"
                       onselectionchange="#{richTreeBean.attributes['onselectionchange'].value}"
                       render="#{richTreeBean.attributes['render'].value}"
                       rendered="#{richTreeBean.attributes['rendered'].value}"
                       selectionType="#{richTreeBean.attributes['selectionType'].value}"
                       status="#{richTreeBean.attributes['status'].value}"
                       style="#{richTreeBean.attributes['style'].value}"
                       styleClass="#{richTreeBean.attributes['styleClass'].value}"
                       title="#{richTreeBean.attributes['title'].value}"
                       toggleNodeEvent="#{richTreeBean.attributes['toggleNodeEvent'].value}"
                       toggleType="#{richTreeBean.attributes['toggleType'].value}"
                       >
                <rich:treeNode expanded="#{richTreeModelRecursiveAdaptorBean.expanded[node.label]}">
                    #{node.label}
                </rich:treeNode>

                <rich:treeModelRecursiveAdaptor
                    roots="#{richTreeModelRecursiveAdaptorBean.rootNodes}"
                    nodes="#{richTreeModelRecursiveAdaptorBean.useMapModel ? node.recursiveMap : node.recursiveList}"
                    >

                    <rich:treeNode
                        expanded="#{richTreeModelRecursiveAdaptorBean.expanded[node.label]}"
                        rendered="#{richTreeNodeBean.attributes[0]['rendered'].value || node.number != 1}"
                        iconLeaf="#{richTreeNodeBean.attributes[0]['iconLeaf'].value}"
                        iconExpanded="#{richTreeNodeBean.attributes[0]['iconExpanded'].value}"
                        iconCollapsed="#{richTreeNodeBean.attributes[0]['iconCollapsed'].value}"
                        handleClass="#{richTreeNodeBean.attributes[0]['handleClass'].value}"
                        iconClass="#{richTreeNodeBean.attributes[0]['iconClass'].value}"
                        labelClass="#{richTreeNodeBean.attributes[0]['labelClass'].value}"
                        styleClass="#{richTreeNodeBean.attributes[0]['styleClass'].value}">
                        <f:facet name="handleLoading">
                            <h:graphicImage value="/resources/images/loading.gif" rendered="#{richTreeBean.testLoadingFacet}" />
                        </f:facet>
                        <a4j:outputPanel id="panel">
                            #{node.label}
                        </a4j:outputPanel>
                    </rich:treeNode>

                    <rich:treeModelAdaptor
                        nodes="#{node.model.list}"
                        rendered="#{richTreeModelAdaptorBean.attributes['rendered'].value}">
                        <rich:treeNode>
                            #{node.label}
                        </rich:treeNode>
                    </rich:treeModelAdaptor>

                    <rich:treeModelAdaptor
                        nodes="#{node.model.map}"
                        rendered="#{richTreeModelAdaptorBean.attributes['rendered'].value}"
                        rowKeyConverter="treeAdaptorKeyConverter">
                        <rich:treeNode>
                            #{node.label}
                        </rich:treeNode>
                    </rich:treeModelAdaptor>

                    <rich:treeModelRecursiveAdaptor
                        roots="#{node.model.recursive}"
                        nodes="#{richTreeModelRecursiveAdaptorBean.useMapModel ? node.recursiveMap : node.recursiveList}"
                        rendered="#{richTreeModelRecursiveAdaptorBean.attributes['rendered'].value}">

                        <rich:treeNode
                            expanded="#{richTreeModelRecursiveAdaptorBean.expanded[node.label]}"
                            rendered="#{richTreeNodeBean.attributes[1]['rendered'].value || node.number != 1}"
                            iconLeaf="#{richTreeNodeBean.attributes[1]['iconLeaf'].value}"
                            iconExpanded="#{richTreeNodeBean.attributes[1]['iconExpanded'].value}"
                            iconCollapsed="#{richTreeNodeBean.attributes[1]['iconCollapsed'].value}"
                            handleClass="#{richTreeNodeBean.attributes[1]['handleClass'].value}"
                            iconClass="#{richTreeNodeBean.attributes[1]['iconClass'].value}"
                            labelClass="#{richTreeNodeBean.attributes[1]['labelClass'].value}"
                            styleClass="#{richTreeNodeBean.attributes[1]['styleClass'].value}"
                            >
                            <f:facet name="handleLoading">
                                <h:graphicImage value="/resources/images/loading.gif" rendered="#{richTreeBean.testLoadingFacet}" />
                            </f:facet>
                            #{node.label}
                        </rich:treeNode>
                    </rich:treeModelRecursiveAdaptor>

                </rich:treeModelRecursiveAdaptor>
            </rich:tree>
        </ui:define>

        <ui:define name="outOfTemplateAfter">

            <a4j:outputPanel ajaxRendered="true">
                <h:panelGrid id="selectionOutput" columns="2">
                    <h:outputLabel value="Test Loading Facet:" />
                    <h:selectBooleanCheckbox id="loadingFacet" value="#{richTreeBean.testLoadingFacet}">
                        <a4j:ajax render="#{nestedComponentId}" />
                    </h:selectBooleanCheckbox>

                    <h:outputLabel value="Delayed Render (1sec):" />
                    <h:selectBooleanCheckbox value="#{richTreeBean.delayedRender}">
                        <a4j:ajax />
                    </h:selectBooleanCheckbox>

                    <h:outputLabel value="Recursive Leaf Children Nullable:" />
                    <h:selectBooleanCheckbox id="recursiveLeafChildrenNullable" value="#{richTreeModelRecursiveAdaptorBean.leafChildrenNullable}">
                        <a4j:ajax render="#{nestedComponentId}" />
                    </h:selectBooleanCheckbox>

                    <h:outputLabel value="Recursive Model Representation:" />
                    <h:selectOneRadio id="recursiveModelRepresentation" value="#{richTreeModelRecursiveAdaptorBean.useMapModel}">
                        <f:selectItem itemLabel="List&lt;RecursiveNode&gt;" itemValue="false" />
                        <f:selectItem itemLabel="Map&lt;Integer, RecursiveNode&gt;" itemValue="true" />

                        <a4j:ajax render="#{nestedComponentId}" />
                    </h:selectOneRadio>

                    <h:outputLabel value="Selection:" />
                    <h:outputText id="selection" value="#{richTreeBean.selection}" />

                    <h:outputLabel value="Lazy Initialized:" />
                    <h:outputText id="lazyInitialized" value="#{richTreeModelRecursiveAdaptorBean.lazyInitializedNodes}" />

                    <h:outputLabel value="Selection Change Event:" rendered="#{not empty richTreeListenerBean.treeSelectionChangeEvent}" />
                    <h:panelGrid columns="2" rendered="#{not empty richTreeListenerBean.treeSelectionChangeEvent}">
                        <h:outputLabel value="Client ID:" />
                        <h:outputText id="selectionEventClientId" value="#{richTreeListenerBean.treeSelectionChangeEvent.component.id}" />

                        <h:outputLabel value="New Selection:" />
                        <h:outputText id="selectionEventNewSelection" value="#{richTreeListenerBean.treeSelectionChangeEvent.newSelection}" />

                        <h:outputLabel value="Old Selection:" />
                        <h:outputText id="selectionEventOldSelection" value="#{richTreeListenerBean.treeSelectionChangeEvent.oldSelection}" />
                    </h:panelGrid>

                    <h:outputLabel value="Tree Toggle Event:" rendered="#{not empty richTreeListenerBean.treeToggleEvent}" />
                    <h:panelGrid columns="2" rendered="#{not empty richTreeListenerBean.treeToggleEvent}">
                        <h:outputLabel value="Client ID:" />
                        <h:outputText id="toggleEventClientId" value="#{richTreeListenerBean.treeToggleEvent.component.id}" />

                        <h:outputLabel value="Collapsed:" />
                        <h:outputText id="toggleEventCollapsed" value="#{richTreeListenerBean.treeToggleEvent.collapsed}" />

                        <h:outputLabel value="Expanded:" />
                        <h:outputText id="toggleEventExpanded" value="#{richTreeListenerBean.treeToggleEvent.expanded}" />
                    </h:panelGrid>
                </h:panelGrid>
            </a4j:outputPanel>

            <fieldset>
                <legend>rich:tree</legend>
                <metamer:attributes value="#{richTreeBean.attributes}" id="treeAttributes" />

                <fieldset>
                    <legend>rich:treeModelRecursiveAdaptor [0]</legend>

                    <fieldset>
                        <legend>rich:treeNode [0]</legend>
                        <metamer:attributes value="#{richTreeNodeBean.attributes[0]}" id="node0Attributes" />
                    </fieldset>

                    <fieldset>
                        <legend>rich:treeModelAdaptor</legend>
                        <metamer:attributes value="#{richTreeModelAdaptorBean.attributes}" id="listAttributes" />
                    </fieldset>

                    <fieldset>
                        <legend>rich:treeModelRecursiveAdaptor [1]</legend>
                        <metamer:attributes value="#{richTreeModelRecursiveAdaptorBean.attributes}" id="recursiveAttributes" />

                        <fieldset>
                            <legend>rich:treeNode [1]</legend>
                            <metamer:attributes value="#{richTreeNodeBean.attributes[1]}" id="node1Attributes" />
                        </fieldset>
                    </fieldset>
                </fieldset>
            </fieldset>

        </ui:define>

    </ui:composition>
</html>