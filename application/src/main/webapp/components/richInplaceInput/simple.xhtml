<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:metamer="http://java.sun.com/jsf/composite/metamer"
      xmlns:rich="http://richfaces.org/rich" xmlns:a4j="http://richfaces.org/a4j">

    <!--
JBoss, Home of Professional Open Source
Copyright 2010-2011, Red Hat, Inc. and individual contributors
by the @authors tag. See the copyright.txt in the distribution for a
full listing of individual contributors.

This is free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as
published by the Free Software Foundation; either version 2.1 of
the License, or (at your option) any later version.

This software is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this software; if not, write to the Free
Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
02110-1301 USA, or see the FSF site: http://www.fsf.org.
    -->

    <ui:composition template="/templates/template.xhtml">

        <ui:define name="view">
            <f:metadata>
                <f:viewParam name="templates" value="#{templateBean.templates}">
                    <f:converter converterId="templatesListConverter" />
                </f:viewParam>
            </f:metadata>
        </ui:define>

        <ui:define name="component">
            <rich:inplaceInput id="inplaceInput"
                               changedStateClass="#{richInplaceInputBean.attributes['changedStateClass'].value}"
                               converter="#{richInplaceInputBean.attributes['converter'].value}"
                               converterMessage="#{richInplaceInputBean.attributes['converterMessage'].value}"
                               defaultLabel="#{richInplaceInputBean.attributes['defaultLabel'].value}"
                               disabled="#{richInplaceInputBean.attributes['disabled'].value}"
                               disabledStateClass="#{richInplaceInputBean.attributes['disabledStateClass'].value}"
                               editClass="#{richInplaceInputBean.attributes['editClass'].value}"
                               editEvent="#{richInplaceInputBean.attributes['editEvent'].value}"
                               editStateClass="#{richInplaceInputBean.attributes['editStateClass'].value}"
                               immediate="#{richInplaceInputBean.attributes['immediate'].value}"
                               inputWidth="#{richInplaceInputBean.attributes['inputWidth'].value}"
                               noneClass="#{richInplaceInputBean.attributes['noneClass'].value}"
                               onblur="#{richInplaceInputBean.attributes['onblur'].value}"
                               onclick="#{richInplaceInputBean.attributes['onclick'].value}"
                               onchange="#{richInplaceInputBean.attributes['onchange'].value}"
                               ondblclick="#{richInplaceInputBean.attributes['ondblclick'].value}"
                               onfocus="#{richInplaceInputBean.attributes['onfocus'].value}"
                               oninputclick="#{richInplaceInputBean.attributes['oninputclick'].value}"
                               oninputdblclick="#{richInplaceInputBean.attributes['oninputdblclick'].value}"
                               oninputkeydown="#{richInplaceInputBean.attributes['oninputkeydown'].value}"
                               oninputkeypress="#{richInplaceInputBean.attributes['oninputkeypress'].value}"
                               oninputkeyup="#{richInplaceInputBean.attributes['oninputkeyup'].value}"
                               oninputmousedown="#{richInplaceInputBean.attributes['oninputmousedown'].value}"
                               oninputmousemove="#{richInplaceInputBean.attributes['oninputmousemove'].value}"
                               oninputmouseout="#{richInplaceInputBean.attributes['oninputmouseout'].value}"
                               oninputmouseover="#{richInplaceInputBean.attributes['oninputmouseover'].value}"
                               oninputmouseup="#{richInplaceInputBean.attributes['oninputmouseup'].value}"
                               oninputselect="#{richInplaceInputBean.attributes['oninputselect'].value}"
                               onkeydown="#{richInplaceInputBean.attributes['onkeydown'].value}"
                               onkeypress="#{richInplaceInputBean.attributes['onkeypress'].value}"
                               onkeyup="#{richInplaceInputBean.attributes['onkeyup'].value}"
                               onmousedown="#{richInplaceInputBean.attributes['onmousedown'].value}"
                               onmousemove="#{richInplaceInputBean.attributes['onmousemove'].value}"
                               onmouseout="#{richInplaceInputBean.attributes['onmouseout'].value}"
                               onmouseover="#{richInplaceInputBean.attributes['onmouseover'].value}"
                               onmouseup="#{richInplaceInputBean.attributes['onmouseup'].value}"
                               readyStateClass="#{richInplaceInputBean.attributes['readyStateClass'].value}"
                               rendered="#{richInplaceInputBean.attributes['rendered'].value}"
                               required="#{richInplaceInputBean.attributes['required'].value}"
                               requiredMessage="#{richInplaceInputBean.attributes['requiredMessage'].value}"
                               saveOnBlur="#{richInplaceInputBean.attributes['saveOnBlur'].value}"
                               showControls="#{richInplaceInputBean.attributes['showControls'].value}"
                               style="#{richInplaceInputBean.attributes['style'].value}"
                               styleClass="#{richInplaceInputBean.attributes['styleClass'].value}"
                               tabindex="#{richInplaceInputBean.attributes['tabindex'].value}"
                               title="#{richInplaceInputBean.attributes['title'].value}"
                               validatorMessage="#{richInplaceInputBean.attributes['validatorMessage'].value}"
                               value="#{richInplaceInputBean.attributes['value'].value}"
                               valueChangeListener="#{richBean.valueChangeListener}"
                               >

                <a4j:ajax event="change" render="output"/>

            </rich:inplaceInput>

            <br/><br/>

            output: <h:outputText id="output" value="#{richInplaceInputBean.attributes['value'].value}"/>
        </ui:define>

        <ui:define name="outOfTemplateAfter">
            <metamer:attributes value="#{richInplaceInputBean.attributes}" id="attributes" />
        </ui:define>

    </ui:composition>
</html>